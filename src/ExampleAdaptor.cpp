/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp test.xml -i test.h -a ExampleAdaptor
 *
 * qdbusxml2cpp is Copyright (C) 2015 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "ExampleAdaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class KDEPlasmoidAdaptor
 */

KDEPlasmoidAdaptor::KDEPlasmoidAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    QDBusConnection connection = QDBusConnection::sessionBus();
    QDBusConnection::sessionBus().registerObject("/ComMycroftkdeKDEPlasmoidInterface", parent);
    connection.registerService("com.mycroftkde.KDEPlasmoid");
    setAutoRelaySignals(true);
}

KDEPlasmoidAdaptor::~KDEPlasmoidAdaptor()
{
    // destructor
}

void KDEPlasmoidAdaptor::setText(const QString &in0)
{
    qDebug() << "GetQueryResult:" << in0;
    getquery = in0;
    setTextFunctionSlot();
    emit getquerychanged();
}

void KDEPlasmoidAdaptor::getvoiceQuery(const QString &in0)
{
    qDebug() << "GetVoiceQuery:" << in0;
}

void KDEPlasmoidAdaptor::sendQueryFunctionSlot(const QString &in0)
{
    qDebug() << "sendQuery:" << in0;
    myquery = in0;
    QDBusMessage m = QDBusMessage::createMethodCall("com.mycroftkde.KDEPlasmoid", "/ComMycroftkdeKDEPlasmoidInterface", "com.mycroftkde.KDEPlasmoid", "sendQuery");
    QDBusConnection::sessionBus().call(m, QDBus::Block, 1);
    qDebug() << "LoopFindTest:" << "1";
}

QString KDEPlasmoidAdaptor::sendQuery()
{
    QString out0 = myquery;
    qDebug() << "testmyQuery:" << myquery;
    qDebug() << "textest" << out0;
    qDebug() << "Request to read was received!";
    return out0;
}

void KDEPlasmoidAdaptor::abc(QString a)
{
    QDBusMessage m = QDBusMessage::createMethodCall("com.mycroftkde.KDEPlasmoid", "/ComMycroftkdeKDEPlasmoidInterface", "com.mycroftkde.KDEPlasmoid", "sendQuery");
    m << a;
    qDebug() << "m:" << m;
    //emit signalQueryReady("aQueryIsReady");
    QDBusMessage response = QDBusConnection::sessionBus().call(m);
    QDBusConnection::sessionBus().send(m);
    qDebug() << "response:" << response;
}

void KDEPlasmoidAdaptor::emptyslot(const QString &in0)
{
 qDebug() << "sendSignal:" << in0;
 abc2(in0);
}

void KDEPlasmoidAdaptor::abc2(QString b)
{
 QDBusMessage msg = QDBusMessage::createSignal("/ComMycroftkdeKDEPlasmoidInterface", "com.mycroftkde.KDEPlasmoid", "signalQueryReady");
 msg << b;
 QDBusConnection::sessionBus().send(msg);
}
